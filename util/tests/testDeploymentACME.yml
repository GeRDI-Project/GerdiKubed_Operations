# Copyright 2019 Walentin Lamonos lamonos@lrz.de
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Run after playbook k8s-lb.yml & kubectl apply -f testDeployment.yml!
# Make sure lb port 80 is reachable from the internet
# Use letsencrypt-staging first! Check after you apply this example that
# the certificate has been issued using: kubectl describe certificate ltds-gerdi-tls
# The latest event should be "Issued". Note this can take up to 30 seconds!
# Once staging succeeded, you may change the issuer to letsencrypt-prod and just reapply
# this example, this will then issue a SSL certificate and force all requests to HTTPS
# -Walentin
#
# Additional Notes:
# All requests are rate-limited, hence the reason you should be using the staging
# issuer first if you conduct testing. Find out more here: "https://letsencrypt.org/docs/rate-limits/"
# Certificates are refreshed automatically before the expire.
# Only changes to the "tls" section or "cert-manager.io/issuer" annotation of this example
# will retrigger a Let's Encrypt request.
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: nginx-test
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/issuer: "letsencrypt-staging" #"letsencrypt-prod"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
    nginx.ingress.kubernetes.io/from-to-www-redirect: "true"

spec:
  tls:
  - hosts:
    - ltds.gerdi.org
    - www.ltds.gerdi.org
    secretName: ltds-gerdi-tls
  rules:
  - host: www.ltds.gerdi.org
    http:
      paths:
      - path: /
        backend:
          serviceName: nginx-test
          servicePort: 80
