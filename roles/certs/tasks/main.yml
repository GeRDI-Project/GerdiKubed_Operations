---
- name: Check whether cert infrastructure needs setup
  stat:
    path: "/srv/kubernetes/ca.key"
  register: ca_key_exists

# create canonical place for certs and keys on control machine
- name: Create directory for certs and keys on control machine
  file:
    path: "/srv/kubernetes"
    state: directory
    owner: root
    group: root
    mode: 0500
  when: ca_key_exists.stat.exists == False

# create CA key and cert if it does not exist
- name: Create CA key
  command: openssl genrsa -out /srv/kubernetes/ca.key 2048
  when: ca_key_exists.stat.exists == False

- name: Check for existing CA certificate file
  stat:
    path: "/srv/kubernetes/ca.crt"
  register: ca_crt_exists

- name: Create CA certificate
  command: openssl req -x509 -new -nodes -key /srv/kubernetes/ca.key -subj "/CN={{ MASTER_IP}}" -days 10000 -out /srv/kubernetes/ca.crt
  when: ca_crt_exists.stat.exists == False

- name: Check whether server key exists
  stat:
    path: "/srv/kubernetes/server.key"
  register: server_key_exists

- name: Create server key
  command: openssl genrsa -out /srv/kubernetes/server.key 2048
  when: server_key_exists.stat.exists == False

- name: Check for existing server certificate file
  stat:
    path: "/srv/kubernetes/server.crt"
  register: server_crt_exists

- name: Create server csr
  command: openssl req -new -key "/srv/kubernetes/server.key" -subj "/CN={{ MASTER_IP }}" -out "/srv/kubernetes/server.csr"
  when: server_crt_exists.stat.exists == False

- name: Sign server csr
  command: openssl x509 -req -in /srv/kubernetes/server.csr -CA /srv/kubernetes/ca.crt -CAkey /srv/kubernetes/ca.key -CAcreateserial -out /srv/kubernetes/server.crt -days 10000
  when: server_crt_exists.stat.exists == False
