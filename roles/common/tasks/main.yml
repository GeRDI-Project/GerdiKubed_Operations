---
# Common tasks on every host
- name: Install additional requirements
  apt:
      pkg: "{{ item }}"
      state: latest
  with_items:
      - apt-transport-https
      - bash-completion
      - ca-certificates
      - curl
      - iproute2
      - libnm-glib-dev
      - python-dbus
      - python-networkmanager
      - python-openssl

# TODO Take care of it in image (see SAI-242)
- name: Turn swapoff
  shell: swapoff -a

- name: Permanently turn swap off
  lineinfile:
    path: /etc/fstab
    state: absent
    regexp: "^/dev/sda1"

- name: set hostname for master
  hostname:
    name: "{{ K8S_CLUSTER_NAME}}-mstr-{{hostname_suffix}}"
  when: inventory_hostname in groups['kubernetes-masters']

- name: set hostname for node
  hostname:
    name: "{{ K8S_CLUSTER_NAME}}-nd-{{hostname_suffix}}"
  when: inventory_hostname in groups['kubernetes-nodes']

- name: Create k8s directories
  file:
    path: "{{ item.path }}"
    state: directory
    mode: "{{ item.mode }}"
  with_items:
    - { path: "{{ K8S_BASE_DIR    }}", mode: '0755' }
    - { path: "{{ K8S_CERT_FILES_DIR  }}", mode: '0755' }
    - { path: "{{ K8S_AUTH_FILES_DIR  }}", mode: '0755' }
    - { path: "{{ K8S_KEY_FILES_DIR  }}", mode: '0700' }
    - { path: "/etc/kubernetes/manifests", mode: '0755' }

- name: Install script to determine interfaces, ips and gws
  copy:
    src: printIface.sh
    dest: /root/printIface.sh

- name: Retrieve information for first interface
  shell: bash /root/printIface.sh 1
  register: firstInterface

- name: Set facts for first interface
  set_fact:
    iface1:
      name: "{{ firstInterface.stdout.split(' ')[0] }}"
      ipv4: "{{ firstInterface.stdout.split(' ')[1] }}"
      gw: "{{ firstInterface.stdout.split(' ')[2] }}"

- name: Retrieve information for second interface
  shell: bash /root/printIface.sh 2
  register: secondInterface
  when: inventory_hostname in groups['kubernetes-nodes']

- name: Set facts for second interface
  set_fact:
    iface2:
      name: "{{ secondInterface.stdout.split(' ')[0] }}"
      ipv4: "{{ secondInterface.stdout.split(' ')[1] }}"
      gw: "{{ secondInterface.stdout.split(' ')[2] }}"
  when: inventory_hostname in groups['kubernetes-nodes']

- name: Retrieve current hostname
  shell: hostname
  register: hostname

- name: Install server key and cert
  copy:
    src:  "{{ item.src  }}"
    dest: "{{ item.dest }}"
    mode: "{{ item.mode }}"
  with_items:
    - { src:  "{{ CONTROL_KEY_DIR}}/{{ hostname.stdout }}.key",
        dest: "{{ K8S_KEY_FILES_DIR }}/{{ hostname.stdout }}.key",
        mode: '0400' }
    - { src:  "{{ CONTROL_CERT_DIR}}/{{ hostname.stdout }}.crt.pem",
        dest: "{{ K8S_CERT_FILES_DIR }}/{{ hostname.stdout }}.crt.pem",
        mode: '0444' }
    - { src:  "{{ CONTROL_CERT_DIR}}/ca.crt.pem",
        dest: "{{ K8S_CERT_FILES_DIR }}/ca.crt.pem",
        mode: '0444' }
    - { src:  "{{ CONTROL_CERT_DIR}}/admin.crt.pem",
        dest: "{{ K8S_CERT_FILES_DIR }}/admin.crt.pem",
        mode: '0444' }
    - { src:  "{{ CONTROL_KEY_DIR}}/admin.key",
        dest: "{{ K8S_KEY_FILES_DIR }}/admin.key",
        mode: '0400' }
