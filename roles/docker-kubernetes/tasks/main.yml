- name: Flush iptables rules
  iptables:
    table: nat
    flush: yes

- name: Delete default docker bridge
  nmcli:
    conn_name: docker0
    ifname: docker0
    type: bridge
    state: absent
  # Ignore error when trying to delete interface without connection
  ignore_errors: True

# FIXME: this step does not work
- name: Creating network bridge cbr0 for per-node CIDR ranges
  nmcli:
    conn_name: cbr0
    type: bridge
    ifname: cbr0
    mtu: 1460
    # TODO: update ip to match your environment
    # The bridge itself needs an address from $NODE_X_POD_CIDR - by
    # convention the first IP. Call this NODE_X_BRIDGE_ADDR. For example, if
    # NODE_X_POD_CIDR is 10.0.0.0/16, then NODE_X_BRIDGE_ADDR is 10.0.0.1/16.
    # NOTE: this retains the /16 suffix because of how this is used later.
    ip4: 10.0.0.1 # TODO: update to match installation
    state: present

    ## TODO: Don't need if this is needed (probably only on gateway node needed)
    ## If you have turned off Dockerâ€™s IP masquerading to allow pods to talk to
    ## each other, then you may need to do masquerading just for destination IPs
    ## outside the cluster network. For example:
    ## iptables -t nat -A POSTROUTING ! -d ${CLUSTER_SUBNET} -m addrtype ! --dst-type LOCAL -j MASQUERADE
    #- name: Enable NAT masquerading for destination IPs outside the cluster network
    #  iptables:
    #    comment: Masquerading for destination IPs outside cluster network
    #    chain: POSTROUTING
    #    table: nat
    #    jump: MASQUERADE
    #    destination: ! 10.0.0.0/24 # TODO: update
    #    state: present
    #    # This rule is not yet complete
    #
    ## TODO: enable IPv4 forwarding on this node
    #- name: Enable IPv4 forwarding
    #  sysctl:
    #    name: net.ipv4.ip_forward
    #    value: 1
    #    state: present
    #    reload: True
