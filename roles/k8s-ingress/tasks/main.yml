# Copyright 2019 Walentin Lamonos lamonos@lrz.de
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
- name: network-interfaces | Get Public Interface
  set_fact:
    host_public_interface: "{{ item }}"
    host_public_address: "{{ hostvars[inventory_hostname]['ansible_' + item]['ipv4']['address'] }}"
    host_public_netmask: "{{ hostvars[inventory_hostname]['ansible_' + item]['ipv4']['netmask'] }}"
    host_public_network: "{{ hostvars[inventory_hostname]['ansible_' +  item]['ipv4']['network'] }}"
  when: hostvars[inventory_hostname]['ansible_' + item] is defined and
        hostvars[inventory_hostname]['ansible_' + item]['ipv4'] is defined and
        (hostvars[inventory_hostname]['ansible_' + item]['ipv4']['address'] | ipaddr('192.168.128.0/17') or
        hostvars[inventory_hostname]['ansible_' + item]['ipv4']['address'] | ipaddr('141.40.254.0/23') or
        hostvars[inventory_hostname]['ansible_' + item]['ipv4']['address'] | ipaddr('138.246.224.0/23') or
        hostvars[inventory_hostname]['ansible_' + item]['ipv4']['address'] | ipaddr('129.187.252.0/23')) # OpenStack Cloud # VMWare Cloud # OpenNebula Cloud
  with_items: "{{ ansible_interfaces }}"

- name: k8s-ingress | Create addons dir
  file:
    path: /etc/kubernetes/addons
    state: directory

- name: k8s-ingress | Download ingress mandatory
  get_url:
    url: "{{ K8S_INGRESS_MANDATORY }}"
    dest: /etc/kubernetes/addons/kube-ingress-mandatory.yml
    mode: '0440'

- name: k8s-ingress | Download ingress controller
  get_url:
    url: "{{ K8S_INGRESS_CERT_MANAGER }}"
    dest: /etc/kubernetes/addons/kube-ingress-cert-manager.yml
    mode: '0440'

- name: k8s-ingress | Apply ingress mandatory
  shell: kubectl apply -f /etc/kubernetes/addons/kube-ingress-mandatory.yml

- name: k8s-ingress | Label lb machines
  shell: kubectl label nodes {{ inventory_hostname }} role=lb --overwrite

- name: k8s-ingress | Create a yml-file to deploy the ingress controller
  template:
    src: "kube-nginx-ingress.yml.j2"
    dest: "/etc/kubernetes/addons/kube-nginx-ingress.yml"

- name: k8s-ingress | Create nginx ingress controller
  shell: kubectl apply --validate=false -f /etc/kubernetes/addons/kube-nginx-ingress.yml

- name: k8s-ingress | Create cert-manager
  shell: kubectl apply --validate=false -f /etc/kubernetes/addons/kube-ingress-cert-manager.yml

- name: k8s-ingress | Create a yml-file to setup ACME staging issuer
  template:
    src: "staging-issuer.yml.j2"
    dest: "/etc/kubernetes/addons/staging-issuer.yml"
  when: K8S_INGRESS_ACME_EMAIL is defined and (K8S_INGRESS_ACME_EMAIL|length > 0)

# This might require a couple of tries (it needs the above services to run)
- name: k8s-ingress | Create ACME staging issuer
  shell: kubectl apply -f /etc/kubernetes/addons/staging-issuer.yml
  when: K8S_INGRESS_ACME_EMAIL is defined and (K8S_INGRESS_ACME_EMAIL|length > 0)
  retries: 10
  delay: 3

# This might require a couple of tries (it needs the above services to run)
- name: k8s-ingress | Create a yml-file to setup ACME production issuer
  template:
    src: "production-issuer.yml.j2"
    dest: "/etc/kubernetes/addons/production-issuer.yml"
  when: K8S_INGRESS_ACME_EMAIL is defined and (K8S_INGRESS_ACME_EMAIL|length > 0)
  retries: 10
  delay: 3

- name: k8s-ingress | Create ACME production issuer
  shell: kubectl apply -f /etc/kubernetes/addons/production-issuer.yml
  when: K8S_INGRESS_ACME_EMAIL is defined and (K8S_INGRESS_ACME_EMAIL|length > 0)
