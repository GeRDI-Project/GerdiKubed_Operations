---
- name: Check whether cert infrastructure needs setup
  stat:
    path: "{{ CERT_INFRASTRUCTURE_DIR }}/ca.key"
  register: ca_key_exists

# create canonical place for certs and keys on control machine
- name: Create directory for certs and keys on control machine
  file:
    path: "{{ item.path }}"
    state: directory
    mode: "{{ item.mode }}"
  with_items:
    - { path: "{{CONTROL_BASE_DIR}}", mode: '0700' }
    - { path: "{{CERT_INFRASTRUCTURE_DIR}}", mode: '0700' }
  when: ca_key_exists.stat.exists == False

# create CA key and cert if it does not exist
- name: Create CA key
  command: openssl genrsa -out {{ CERT_INFRASTRUCTURE_DIR }}/ca.key 2048
  when: ca_key_exists.stat.exists == False

- name: Check for existing CA certificate file
  stat:
    path: "{{ CERT_INFRASTRUCTURE_DIR }}/ca.crt"
  register: ca_crt_exists

- name: Create CA certificate
  command: openssl req -x509 -new -nodes -key {{ CERT_INFRASTRUCTURE_DIR }}/ca.key -subj "/CN={{ MASTER_IP}}" -days 10000 -out {{ CERT_INFRASTRUCTURE_DIR }}/ca.crt
  when: ca_crt_exists.stat.exists == False

- name: Check whether server key exists
  stat:
    path: "{{ CERT_INFRASTRUCTURE_DIR }}/server.key"
  register: server_key_exists

- name: Create server key
  command: openssl genrsa -out {{ CERT_INFRASTRUCTURE_DIR }}/server.key 2048
  when: server_key_exists.stat.exists == False

- name: Check for existing server certificate file
  stat:
    path: "{{ CERT_INFRASTRUCTURE_DIR }}/server.crt"
  register: server_crt_exists

- name: Create server csr
  command: openssl req -new -key "{{ CERT_INFRASTRUCTURE_DIR }}/server.key" -subj "/CN={{ MASTER_IP }}" -out "{{ CERT_INFRASTRUCTURE_DIR }}/server.csr"
  when: server_crt_exists.stat.exists == False

- name: Sign server csr
  command: openssl x509 -req -in {{ CERT_INFRASTRUCTURE_DIR }}/server.csr -CA {{ CERT_INFRASTRUCTURE_DIR }}/ca.crt -CAkey {{ CERT_INFRASTRUCTURE_DIR }}/ca.key -CAcreateserial -out {{ CERT_INFRASTRUCTURE_DIR }}/server.crt -days 10000
  when: server_crt_exists.stat.exists == False
