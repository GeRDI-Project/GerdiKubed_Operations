---
# create canonical place for certs and keys on control machine
- name: Create directory structure for certs and keys on control machine
  file:
    path: "{{ item.path }}"
    state: directory
    mode: "{{ item.mode }}"
  with_items:
    - { path: "{{CONTROL_BASE_DIR}}"  , mode: '0700' }
    - { path: "{{CONTROL_CERT_DIR}}"  , mode: '0700' }
    - { path: "{{CONTROL_KEY_DIR}}"   , mode: '0700' }
    - { path: "{{CONTROL_CONFIG_DIR}}", mode: '0700' }
    - { path: "{{CONTROL_CSR_DIR}}"   , mode: '0700' }
    - { path: "{{CONTROL_CA_DIR}}"    , mode: '0700' }

- name: Initialize ca administration files
  file:
    path: "{{ CONTROL_CA_DIR }}/{{ item }}"
    state: touch
  with_items:
    - serial.txt
    - index.txt

- name: Check if serial numbers must be initialized
  stat:
    path: "{{ CONTROL_CA_DIR }}/serial.txt"
  register: serial

- name: Initialize serial numbers
  shell: "echo '01' > {{ CONTROL_CA_DIR }}/serial.txt"
  when: serial.stat.size == 0

# create keys and certs and sign them
# TODO switch from ip to dns based configuration
- name: Create keys and certs and sign them
  include_tasks: createKeysAndCertsAndSignThem.yml filename={{ item.filename }} cname={{ item.cname }} sign={{ item.sign }} type={{ item.type }} alt_names={{ item.alt_names | default(None) }}
  with_items:
    - cname:    "CA-Certificate"
      filename: "ca"
      sign:     False
      type:     "ca"
    - cname:    "{{ K8S_MASTER_IP }}"
      filename: "etcd"
      alt_names:
        - type: "DNS"
          name: "etcd.gerdi"
        - type: "DNS"
          name: "{{ K8S_MASTER_IP }}"
        - type: "IP"
          name: "{{ K8S_MASTER_IP }}"
      sign:     True
      type:     "server"
    - cname:    "Etcd Client"
      filename: "etcd-client"
      sign:     True
      type:     "client"
    - cname:    "{{ K8S_MASTER_IP }}"
      filename: "kubelet"
      sign:     True
      type:     "server"
    - cname:    "kubelet client certificate"
      filename: "kubelet-client"
      sign:     True
      type:     "client"
    - cname:    "{{ K8S_MASTER_IP }}"
      filename: "apiserver"
      alt_names:
        - type: "DNS"
          name: "apiserver.gerdi"
        - type: "DNS"
          name: "{{ K8S_MASTER_IP }}"
        - type: "IP"
          name: "{{ K8S_MASTER_IP }}"
      sign:     True
      type:     "server"
