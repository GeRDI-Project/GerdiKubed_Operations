# Copyright 2018 Tobias Weber weber@lrz.de
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
# Description:
# Installs etcd & sets up etcd service required by k8s apiserver
# Etcd is a distributed key-value store to persist the k8s configuration serviced by the apiserver.
# It is also used to synchronize several masters (and therefore several apiservers).
- name: etcd | Get etcd Binaries
  unarchive:
    src:  "{{ ETCD_DOWNLOAD_URL }}"
    dest: "{{ K8S_BASE_DIR }}"
    copy: no
    creates: "{{ ETCD_DIR }}/etcd"
  retries: 3
  delay: 3

- name: etcd | Install etcd and etcdctl
  file:
    src:  "{{ ETCD_DIR }}/{{ item }}"
    dest: "/usr/bin/{{ item }}"
    state: link
  with_items:
    - etcd
    - etcdctl

- name: etcd | Create persistence directory for etcd
  file:
    path: "/var/lib/etcd"
    state: directory

- name: etcd | Create the systemd unit file
  template:
    src:  etcd.service.j2
    dest: /etc/systemd/system/etcd.service
  notify:
    - reload daemon
    - restart etcd

- name: etcd | Register etcd to systemd
  systemd:
    state: started
    name: etcd
    enabled: yes
    daemon-reload: yes

- name: etcd | Create etcdctl helper script for debugging purposes
  template:
    src:  "etcdctl_env.sh.j2"
    dest: "/usr/bin/etcdctl_env"
    mode: "0500"

# We pipe through cat to set rc to 0, otherwise task fails (not elegant, but effective)
- name: etcd | Check whether helper script must be registered
  shell: grep "/usr/bin/etcdctl_env" /root/.profile | cat
  register: helperIsInstalled

- name: etcd | Include helper script into profile file
  lineinfile:
    path: "/root/.profile"
    line: ". /usr/bin/etcdctl_env"
    state: present
    insertafter: EOF
  when: helperIsInstalled.stdout == ""
