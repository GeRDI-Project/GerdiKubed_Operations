- name: install ovs and ovn node packages
  package:
    name={{ item }}
    state=present
  with_items:
    - ovn-host

- name: Create OVN configuration
  template:
    src: ovn_k8s.conf.j2
    dest: /etc/openvswitch/ovn_k8s.conf

- name: Secure connection to k8s API server
  shell: ovs-vsctl set Open_vSwitch . external_ids:{{item}}
  with_items:
    - k8s-api-server=https://{{ K8S_MASTER_IP }}
    - k8s-ca-certificate={{ K8S_CERT_FILES_DIR }}/ca.crt.pem
    - k8s-api-token={{ OVN_API_TOKEN }}

- name: Actually inizitalize node
  shell: |
    ovn-k8s-overlay minion-init \
      --cluster-ip-subnet={{ K8S_CLUSTER_IP_SUBNET }} \
      --minion-switch-subnet={{ K8S_CLUSTER_IP_PRE }}.{{ hostname_suffix }}.0/24 \
      --node-name={{ hostname.stdout }}

- name: Determine Gateway for North-South Interface
  shell: ip route show | grep default | grep ens4 | awk '{ print $3 }'
  register: nb_gateway

- name: Install ovn-startup (gateway) as a service
  template:
    src: ovn-startup.service.j2
    dest: /etc/systemd/system/ovn-startup.service
  notify:
    - reload daemon

- name: Install ovn-startup script
  template:
    src:  ovn-startup.sh.j2
    dest: "{{ OVN_K8S_DIR }}/ovn-startup.sh"
    mode: 0755
  when: ansible_ens4.ipv4 is defined

- name: Enable ovn-startup script
  systemd:
    name: ovn-startup
    enabled: yes

- name: Setup Gateway
  command: "{{ OVN_K8S_DIR }}/ovn-startup.sh"

- name: Restart ovn-watcher on master
  systemd:
    name: ovn-k8s-watcher
    state: restarted
  delegate_to: "{{ item }}"
  with_items: "{{ groups['kubernetes-masters'] }}"
