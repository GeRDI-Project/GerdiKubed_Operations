########################################
# Start: Change the values
########################################
# Name of the cluster
# Example: "staging" or "test"
# Used as:
# - Prefix for master domain
# - NFS symlink directory location
# - kubeconfig: cluster-name & current-context
# - controller-manager: --cluster-name
# - apache.conf: subdomain name
MAIN_DOMAIN: "www.test.gerdi.org"
OTHER_DOMAINS:
  - "test.gerdi.org"
K8S_DEPLOYMENT_CONTEXT: "test" # will replace K8S_CLUSTER_NAME sometimes
K8S_GLOBAL_LOG_LEVEL: "v=1"
# Certificates will be created with both DNS-names and IP-Adresses in the alternative names.
# DNS-names in certs need to comply to the following pattern:
# [mstr|no]-\d+.{{K8S_DEPLOYMENT_CONTEXT }}.{{ K8S_DOMAIN_NAMESPACE }}
K8S_DOMAIN_NAMESPACE: "gerdi.org"
# You will find the cert infrastructure (e.g. ca-key and cert and all other stuff) here:
# Do not use ~ or relative paths, please spell out absolute path
#
CONTROL_BASE_DIR:   "/home/di72jiv/gerdiK8s/{{ K8S_DEPLOYMENT_CONTEXT }}_k8s_mgmt"
# Note: Your machine might need whitelisting
NFS_SERVER_DOMAIN: intern05.nas.lrz.de
NFS_VOLUME_PATH: /intern/gerdi01
NFS_SERVER_PATH: "{{ NFS_SERVER_DOMAIN }}:{{ NFS_VOLUME_PATH }}"
# Network interface prefix
# Make sure to use the traditional interface naming scheme (eth0, eth1,... | ens0, ens1,...)
# Instead of Predictable Network Interface Names
# Example: "ens" would assume the interfaces would be named ens[0-9]
NICDEVICEPREFIX: "eth"
# Nameserver the node (systemd-resolved) should use
NODE_NAMESERVER: "8.8.8.8"
# Version Configuration (See: util/VariableTemplate.md):
K8S_VERSION: "v1.11.6"
DOCKER_VERSION: "5:18.09.1~3-0~debian-stretch"
CNI_VERSION: "v0.5.2"
OPENVSWITCH_VERSION: "2.10.0+2018.08.28+git.8ca7c82b7d+ds1-12"
GOLANG_VERSION: "go1.11.1"

####################
# FIX SAI-1573, will be obsoleted by SAI-1492, SAI-1493, and SAI-1494
####################
EXTERNAL_LB: 141.40.254.159
EXTERNAL_GW: 141.40.255.254
EXTERNAL_DEV: "ens4"
LB_ROUTES_TABLE: 8
INTERNAL_NET: 10.155.208.0/21

########################################
# End: Change the values
########################################

# Please only overwrite the following, if you know what you are doing
# You will furthermore find configuration that is only specific to one role in
# the according directory (e.g. roles/apiserver/vars/main.yml)

################################################################################
# Global configuration
################################################################################
K8S_MASTER_DOMAIN: "{{ 'mstr-0.' + K8S_DEPLOYMENT_CONTEXT + '.' + K8S_DOMAIN_NAMESPACE }}"
K8S_MASTER_IP: "{{ lookup('dig', K8S_MASTER_DOMAIN) }}"
# Base dir on all machines (except CONTROL_MACHINE)
K8S_BASE_DIR: /opt/k8s
# Directories in which the k8s binaries reside
K8S_K8S_DIR: "{{ K8S_BASE_DIR }}/kubernetes"
K8S_SERVER_BIN_DIR: "{{ K8S_K8S_DIR }}/server/kubernetes/server/bin"
# Intercluster addresses, authorization and authentication information
K8S_KUBECONFIG: "{{ K8S_BASE_DIR }}/kubeconfig"
K8S_DOWNLOAD_URL: "https://github.com/kubernetes/kubernetes/releases/download/{{K8S_VERSION}}/kubernetes.tar.gz"
# Nameserver Docker should use to resolve
DOCKER_NAMESERVER: "{{ NODE_NAMESERVER }}"
# Note: NICDEVICEPREFIX_VMWARE & NICDEVICEPREFIX_NEBULA
# Only required if inventory contains vmware and opennebula machines
# VMware nic prefix:
NICDEVICEPREFIX_VMWARE: "{{ NICDEVICEPREFIX }}"
# Nebula nic prefix:
NICDEVICEPREFIX_NEBULA: "{{ NICDEVICEPREFIX }}"
# Set to true, if you are running this on LRZ machines
LRZ_INTERNAL: false
################################################################################
# Configuration for cert-infrastructure role
################################################################################
CONTROL_MACHINE:    "127.0.0.1"
CONTROL_CERT_DIR:   "{{ CONTROL_BASE_DIR }}/certs"
CONTROL_KEY_DIR:    "{{ CONTROL_BASE_DIR }}/keys"
CONTROL_CONFIG_DIR: "{{ CONTROL_BASE_DIR }}/configs"
CONTROL_CSR_DIR:    "{{ CONTROL_BASE_DIR }}/csrs"
CONTROL_CA_DIR:     "{{ CONTROL_BASE_DIR }}/ca"

################################################################################
# Configuration for the following roles:
# apiserver, common, controller-manager, etcd, k8s-binaries kubelet, network-ovn
################################################################################
K8S_CERT_FILES_DIR: "{{ K8S_BASE_DIR }}/certs"
K8S_KEY_FILES_DIR: "{{ K8S_BASE_DIR }}/keys"
K8S_AUTH_FILES_DIR: "{{ K8S_BASE_DIR }}/tokens"

################################################################################
# Configuration for the following roles:
# apiserver, cert-infrastructure, controller-manager, kube-proxy, network-ovn
################################################################################
K8S_CLUSTER_IP_PRE:    "10.220"
K8S_CLUSTER_IP_SUBNET: "{{ K8S_CLUSTER_IP_PRE }}.0.0/15"
K8S_SERVICE_IP_PRE:    "10.222"
K8S_SERVICE_IP_SUBNET: "{{ K8S_SERVICE_IP_PRE }}.0.0/16"
K8S_DNS_IP: "{{ K8S_SERVICE_IP_PRE }}.0.10"

################################################################################
# Configuration for the following roles:
# cni, kubelet, network-ovn
################################################################################
CNI_DOWNLOAD_URL: "https://github.com/containernetworking/cni/releases/download/{{ CNI_VERSION }}/cni-{{ CNI_VERSION }}.tgz"
CNI_DIR: "{{ K8S_BASE_DIR }}/cni-{{ CNI_VERSION }}"
CNI_CONF_DIR: /etc/cni/net.d

################################################################################
# Configuration for the following roles:
# apiserver, network-ovn
################################################################################
OVN_API_TOKEN: "someValue"
# OVN Node Version
OVN_HOST_VERSION: "{{ OPENVSWITCH_VERSION }}"
# OVN Master Version
OVN_CENTRAL_VERSION: "{{ OPENVSWITCH_VERSION }}"
#Used by autoRepairRoutes.sh; Make sure number is unique
K8S_INTERNAL_ROUTING_TABLE: "180485"

################################################################################
# Configuration for the following roles:
# common, persistence_nfs
################################################################################
NFS_MOUNT_PATH: "/mnt/nfs"
